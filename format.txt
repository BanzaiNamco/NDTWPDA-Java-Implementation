A,B,C   // States
a,b     // Input alphabet
$       // Start marker
@       // End marker
Z,a     // Stack symbols
4       // Number of transitions
A,a,ε,A,a,1    // Current state, input, pop symbol, destination state, push symbol, direction to move input head (1: right, -1: left, 0: stay)
A,ε,ε,A,ε,1    // USE ε for lambda (A,λ,λ) -> (A,λ,1) = (A,ε,ε) -> (A,ε,1) 
B,b,a,A,ε,1    // (B,b,a) -> (A,λ,1)
B,@,Z,C,ε,0    // (B,@,Z) -> (C,λ,0)
A    // Initial state
Z    // Initial stack symbol
C,A    // Final states